import MatroskaId from './id'

export default {
    0x1a45dfa3: new MatroskaId({ name: 'EBML                       ', level: "0 ", id: "1a45dfa3", mandatory: "mand.", multiple: "mult.", range: "-         ", default: "-                             ", type: "m", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "Set the EBML characteristics of the data to follow. Each EBML document has to start with this.", }),
    0x00004286: new MatroskaId({ name: 'EBMLVersion                ', level: "1 ", id: "00004286", mandatory: "mand.", multiple: "-    ", range: "-         ", default: "1                             ", type: "u", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "The version of EBML parser used to create the file.", }),
    0x000042f7: new MatroskaId({ name: 'EBMLReadVersion            ', level: "1 ", id: "000042f7", mandatory: "mand.", multiple: "-    ", range: "-         ", default: "1                             ", type: "u", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "The minimum EBML version a parser has to support to read this file.", }),
    0x000042f2: new MatroskaId({ name: 'EBMLMaxIDLength            ', level: "1 ", id: "000042f2", mandatory: "mand.", multiple: "-    ", range: "-         ", default: "4                             ", type: "u", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "The maximum length of the IDs you'll find in this file (4 or less in Matroska).", }),
    0x000042f3: new MatroskaId({ name: 'EBMLMaxSizeLength          ', level: "1 ", id: "000042f3", mandatory: "mand.", multiple: "-    ", range: "-         ", default: "8                             ", type: "u", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "The maximum length of the sizes you'll find in this file (8 or less in Matroska). This does not override the Element size indicated at the beginning of an Element. Elements that have an indicated size which is larger than what is allowed by EBMLMaxSizeLength shall be considered invalid.", }),
    0x00004282: new MatroskaId({ name: 'DocType                    ', level: "1 ", id: "00004282", mandatory: "mand.", multiple: "-    ", range: "-         ", default: "matroska                      ", type: "s", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "A string that describes the type of document that follows this EBML header. 'matroska' in our case or 'webm' for webm files.", }),
    0x00004287: new MatroskaId({ name: 'DocTypeVersion             ', level: "1 ", id: "00004287", mandatory: "mand.", multiple: "-    ", range: "-         ", default: "1                             ", type: "u", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "The version of DocType interpreter used to create the file.", }),
    0x00004285: new MatroskaId({ name: 'DocTypeReadVersion         ', level: "1 ", id: "00004285", mandatory: "mand.", multiple: "-    ", range: "-         ", default: "1                             ", type: "u", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "The minimum DocType version an interpreter has to support to read this file.", }),
    0x000000ec: new MatroskaId({ name: 'Void                       ', level: "g ", id: "000000ec", mandatory: "-    ", multiple: "mult.", range: "-         ", default: "-                             ", type: "j", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "Used to void damaged data, to avoid unexpected behaviors when using damaged data. The content is discarded. Also used to reserve space in a sub-element for later use.", }),
    0x000000bf: new MatroskaId({ name: 'CRC-32                     ', level: "g ", id: "000000bf", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "b", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "The CRC is computed on all the data of the Master-element it's in. The CRC Element should be the first in it's parent master for easier reading. All level 1 Elements should include a CRC-32. The CRC in use is the IEEE CRC32 Little Endian", }),
    0x1b538667: new MatroskaId({ name: 'SignatureSlot              ', level: "g ", id: "1b538667", mandatory: "-    ", multiple: "mult.", range: "-         ", default: "-                             ", type: "m", webm: "-", v1: "-", v2: "-", v3: "-", v4: "-", description: "Contain signature of some (coming) Elements in the stream.", }),
    0x00007e8a: new MatroskaId({ name: 'SignatureAlgo              ', level: "1 ", id: "00007e8a", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "u", webm: "-", v1: "-", v2: "-", v3: "-", v4: "-", description: "Signature algorithm used (1=RSA, 2=elliptic).", }),
    0x00007e9a: new MatroskaId({ name: 'SignatureHash              ', level: "1 ", id: "00007e9a", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "u", webm: "-", v1: "-", v2: "-", v3: "-", v4: "-", description: "Hash algorithm used (1=SHA1-160, 2=MD5).", }),
    0x00007ea5: new MatroskaId({ name: 'SignaturePublicKey         ', level: "1 ", id: "00007ea5", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "b", webm: "-", v1: "-", v2: "-", v3: "-", v4: "-", description: "The public key to use with the algorithm (in the case of a PKI-based signature).", }),
    0x00007eb5: new MatroskaId({ name: 'Signature                  ', level: "1 ", id: "00007eb5", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "b", webm: "-", v1: "-", v2: "-", v3: "-", v4: "-", description: "The signature of the data (until a new.", }),
    0x00007e5b: new MatroskaId({ name: 'SignatureElements          ', level: "1 ", id: "00007e5b", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "m", webm: "-", v1: "-", v2: "-", v3: "-", v4: "-", description: "Contains Elements that will be used to compute the signature.", }),
    0x00007e7b: new MatroskaId({ name: 'SignatureElementList       ', level: "2 ", id: "00007e7b", mandatory: "-    ", multiple: "mult.", range: "-         ", default: "-                             ", type: "m", webm: "-", v1: "-", v2: "-", v3: "-", v4: "-", description: "A list consists of a number of consecutive Elements that represent one case where data is used in signature. Ex: Cluster|Block|BlockAdditional means that the BlockAdditional of all Blocks in all Clusters is used for encryption.", }),
    0x00006532: new MatroskaId({ name: 'SignedElement              ', level: "3 ", id: "00006532", mandatory: "-    ", multiple: "mult.", range: "-         ", default: "-                             ", type: "b", webm: "-", v1: "-", v2: "-", v3: "-", v4: "-", description: "An Element ID whose data will be used to compute the signature.", }),
    0x18538067: new MatroskaId({ name: 'Segment                    ', level: "0 ", id: "18538067", mandatory: "mand.", multiple: "-    ", range: "-         ", default: "-                             ", type: "m", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "The Root Element that contains all other Top-Level Elements (Elements defined only at Level 1). A Matroska file is composed of 1 Segment.", }),
    0x114d9b74: new MatroskaId({ name: 'SeekHead                   ', level: "1 ", id: "114d9b74", mandatory: "-    ", multiple: "mult.", range: "-         ", default: "-                             ", type: "m", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "Contains the position of other Top-Level Elements.", }),
    0x00004dbb: new MatroskaId({ name: 'Seek                       ', level: "2 ", id: "00004dbb", mandatory: "mand.", multiple: "mult.", range: "-         ", default: "-                             ", type: "m", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "Contains a single seek entry to an EBML Element.", }),
    0x000053ab: new MatroskaId({ name: 'SeekID                     ', level: "3 ", id: "000053ab", mandatory: "mand.", multiple: "-    ", range: "-         ", default: "-                             ", type: "b", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "The binary ID corresponding to thename", }),
    0x000053ac: new MatroskaId({ name: 'SeekPosition               ', level: "3 ", id: "000053ac", mandatory: "mand.", multiple: "-    ", range: "-         ", default: "-                             ", type: "u", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "The position of the Element in the Segment in octets (0 = first level 1 Element).", }),
    0x1549a966: new MatroskaId({ name: 'Info                       ', level: "1 ", id: "1549a966", mandatory: "mand.", multiple: "mult.", range: "-         ", default: "-                             ", type: "m", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "Contains miscellaneous general information and statistics on the file.", }),
    0x000073a4: new MatroskaId({ name: 'SegmentUID                 ', level: "2 ", id: "000073a4", mandatory: "-    ", multiple: "-    ", range: "not 0     ", default: "-                             ", type: "b", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "A randomly generated unique ID to identify the current Segment between many others (128 bits).", }),
    0x00007384: new MatroskaId({ name: 'SegmentFilename            ', level: "2 ", id: "00007384", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "e", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "A filename corresponding to this Segment.", }),
    0x003cb923: new MatroskaId({ name: 'PrevUID                    ', level: "2 ", id: "003cb923", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "b", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "A unique ID to identify the previous chained Segment (128 bits).", }),
    0x003c83ab: new MatroskaId({ name: 'PrevFilename               ', level: "2 ", id: "003c83ab", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "e", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "An escaped filename corresponding to the previous Segment.", }),
    0x003eb923: new MatroskaId({ name: 'NextUID                    ', level: "2 ", id: "003eb923", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "b", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "A unique ID to identify the next chained Segment (128 bits).", }),
    0x003e83bb: new MatroskaId({ name: 'NextFilename               ', level: "2 ", id: "003e83bb", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "e", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "An escaped filename corresponding to the next Segment.", }),
    0x00004444: new MatroskaId({ name: 'SegmentFamily              ', level: "2 ", id: "00004444", mandatory: "-    ", multiple: "mult.", range: "-         ", default: "-                             ", type: "b", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "A randomly generated unique ID that all Segments related to each other must use (128 bits).", }),
    0x00006924: new MatroskaId({ name: 'ChapterTranslate           ', level: "2 ", id: "00006924", mandatory: "-    ", multiple: "mult.", range: "-         ", default: "-                             ", type: "m", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "A tuple of corresponding ID used by chapter codecs to represent this Segment.", }),
    0x000069fc: new MatroskaId({ name: 'ChapterTranslateEditionUID ', level: "3 ", id: "000069fc", mandatory: "-    ", multiple: "mult.", range: "-         ", default: "-                             ", type: "u", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "Specify an edition UID on which this correspondance applies. When not specified, it means for all editions found in the Segment.", }),
    0x000069bf: new MatroskaId({ name: 'ChapterTranslateCodec      ', level: "3 ", id: "000069bf", mandatory: "mand.", multiple: "-    ", range: "-         ", default: "-                             ", type: "u", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "The chapter codec using this ID (0: Matroska Script, 1: DVD-menu).", }),
    0x000069a5: new MatroskaId({ name: 'ChapterTranslateID         ', level: "3 ", id: "000069a5", mandatory: "mand.", multiple: "-    ", range: "-         ", default: "-                             ", type: "b", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "The binary value used to represent this Segment in the chapter codec data. The format depends on the ChapProcessCodecID used.", }),
    0x002ad7b1: new MatroskaId({ name: 'TimecodeScale              ', level: "2 ", id: "002ad7b1", mandatory: "mand.", multiple: "-    ", range: "-         ", default: "1000000                       ", type: "u", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "Timestamp scale in nanoseconds (1.000.000 means all timestamps in the Segment are expressed in milliseconds).", }),
    0x00004489: new MatroskaId({ name: 'Duration                   ', level: "2 ", id: "00004489", mandatory: "-    ", multiple: "-    ", range: "> 0       ", default: "-                             ", type: "f", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "Duration of the Segment (based on TimecodeScale).", }),
    0x00004461: new MatroskaId({ name: 'DateUTC                    ', level: "2 ", id: "00004461", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "d", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "Date of the origin of timestamp (value 0), i.e. production date.", }),
    0x00007ba9: new MatroskaId({ name: 'Title                      ', level: "2 ", id: "00007ba9", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "e", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "General name of the Segment.", }),
    0x00004d80: new MatroskaId({ name: 'MuxingApp                  ', level: "2 ", id: "00004d80", mandatory: "mand.", multiple: "-    ", range: "-         ", default: "-                             ", type: "e", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "Muxing application or library (\"libmatroska-0.4.3\").", }),
    0x00005741: new MatroskaId({ name: 'WritingApp                 ', level: "2 ", id: "00005741", mandatory: "mand.", multiple: "-    ", range: "-         ", default: "-                             ", type: "e", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "Writing application (\"mkvmerge-0.3.3\").", }),
    0x1f43b675: new MatroskaId({ name: 'Cluster                    ', level: "1 ", id: "1f43b675", mandatory: "-    ", multiple: "mult.", range: "-         ", default: "-                             ", type: "m", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "The Top-Level Element containing the (monolithic) Block structure.", }),
    0x000000e7: new MatroskaId({ name: 'Timecode                   ', level: "2 ", id: "000000e7", mandatory: "mand.", multiple: "-    ", range: "-         ", default: "-                             ", type: "u", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "Absolute timestamp of the cluster (based on TimecodeScale).", }),
    0x00005854: new MatroskaId({ name: 'SilentTracks               ', level: "2 ", id: "00005854", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "m", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "The list of tracks that are not used in that part of the stream. It is useful when using overlay tracks on seeking. Then you should decide what track to use.", }),
    0x000058d7: new MatroskaId({ name: 'SilentTrackNumber          ', level: "3 ", id: "000058d7", mandatory: "-    ", multiple: "mult.", range: "-         ", default: "-                             ", type: "u", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "One of the track number that are not used from now on in the stream. It could change later if not specified as silent in a further Cluster.", }),
    0x000000a7: new MatroskaId({ name: 'Position                   ', level: "2 ", id: "000000a7", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "u", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "The Position of the Cluster in the Segment (0 in live broadcast streams). It might help to resynchronise offset on damaged streams.", }),
    0x000000ab: new MatroskaId({ name: 'PrevSize                   ', level: "2 ", id: "000000ab", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "u", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "Size of the previous Cluster, in octets. Can be useful for backward playing.", }),
    0x000000a3: new MatroskaId({ name: 'SimpleBlock                ', level: "2 ", id: "000000a3", mandatory: "-    ", multiple: "mult.", range: "-         ", default: "-                             ", type: "b", webm: "*", v1: "-", v2: "*", v3: "*", v4: "*", description: "Similar to Block but without all the extra information, mostly used to reduced overhead when no extra feature is needed. (see SimpleBlock Structure)", }),
    0x000000a0: new MatroskaId({ name: 'BlockGroup                 ', level: "2 ", id: "000000a0", mandatory: "-    ", multiple: "mult.", range: "-         ", default: "-                             ", type: "m", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "Basic container of information containing a single Block or BlockVirtual, and information specific to that Block/VirtualBlock.", }),
    0x000000a1: new MatroskaId({ name: 'Block                      ', level: "3 ", id: "000000a1", mandatory: "mand.", multiple: "-    ", range: "-         ", default: "-                             ", type: "b", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "Block containing the actual data to be rendered and a timestamp relative to the Cluster Timecode. (see Block Structure)", }),
    0x000000a2: new MatroskaId({ name: 'BlockVirtual               ', level: "3 ", id: "000000a2", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "b", webm: "-", v1: "-", v2: "-", v3: "-", v4: "-", description: "A Block with no data. It must be stored in the stream at the place the real Block should be in display order. (see Block Virtual)", }),
    0x000075a1: new MatroskaId({ name: 'BlockAdditions             ', level: "3 ", id: "000075a1", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "m", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "Contain additional blocks to complete the main one. An EBML parser that has no knowledge of the Block structure could still see and use/skip these data.", }),
    0x000000a6: new MatroskaId({ name: 'BlockMore                  ', level: "4 ", id: "000000a6", mandatory: "mand.", multiple: "mult.", range: "-         ", default: "-                             ", type: "m", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "Contain the BlockAdditional and some parameters.", }),
    0x000000ee: new MatroskaId({ name: 'BlockAddID                 ', level: "5 ", id: "000000ee", mandatory: "mand.", multiple: "-    ", range: "not 0     ", default: "1                             ", type: "u", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "An ID to identify the BlockAdditional level.", }),
    0x000000a5: new MatroskaId({ name: 'BlockAdditional            ', level: "5 ", id: "000000a5", mandatory: "mand.", multiple: "-    ", range: "-         ", default: "-                             ", type: "b", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "Interpreted by the codec as it wishes (using the BlockAddID).", }),
    0x0000009b: new MatroskaId({ name: 'BlockDuration              ', level: "3 ", id: "0000009b", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "DefaultDuration               ", type: "u", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "The duration of the Block (based on TimecodeScale). This Element is mandatory when DefaultDuration is set for the track (but can be omitted as other default values). When not written and with no DefaultDuration, the value is assumed to be the difference between the timestamp of this Block and the timestamp of the next Block in \"display\" order (not coding order). This Element can be useful at the end of a Track (as there is not other Block available), or when there is a break in a track like for subtitle tracks. When set to 0 that means the frame is not a keyframe.", }),
    0x000000fa: new MatroskaId({ name: 'ReferencePriority          ', level: "3 ", id: "000000fa", mandatory: "mand.", multiple: "-    ", range: "-         ", default: "0                             ", type: "u", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "This frame is referenced and has the specified cache priority. In cache only a frame of the same or higher priority can replace this frame. A value of 0 means the frame is not referenced.", }),
    0x000000fb: new MatroskaId({ name: 'ReferenceBlock             ', level: "3 ", id: "000000fb", mandatory: "-    ", multiple: "mult.", range: "-         ", default: "-                             ", type: "i", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "Timestamp of another frame used as a reference (ie: B or P frame). The timestamp is relative to the block it's attached to.", }),
    0x000000fd: new MatroskaId({ name: 'ReferenceVirtual           ', level: "3 ", id: "000000fd", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "i", webm: "-", v1: "-", v2: "-", v3: "-", v4: "-", description: "Relative position of the data that should be in position of the virtual block.", }),
    0x000000a4: new MatroskaId({ name: 'CodecState                 ', level: "3 ", id: "000000a4", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "b", webm: "-", v1: "-", v2: "*", v3: "*", v4: "*", description: "The new codec state to use. Data interpretation is private to the codec. This information should always be referenced by a seek entry.", }),
    0x000075a2: new MatroskaId({ name: 'DiscardPadding             ', level: "3 ", id: "000075a2", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "i", webm: "*", v1: "-", v2: "-", v3: "-", v4: "*", description: "Duration in nanoseconds of the silent data added to the Block (padding at the end of the Block for positive value, at the beginning of the Block for negative value). The duration of DiscardPadding is not calculated in the duration of the TrackEntry and should be discarded during playback.", }),
    0x0000008e: new MatroskaId({ name: 'Slices                     ', level: "3 ", id: "0000008e", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "m", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "Contains slices description.", }),
    0x000000e8: new MatroskaId({ name: 'TimeSlice                  ', level: "4 ", id: "000000e8", mandatory: "-    ", multiple: "mult.", range: "-         ", default: "-                             ", type: "m", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "Contains extra time information about the data contained in the Block. While there are a few files in the wild with this Element, it is no longer in use and has been deprecated. Being able to interpret this Element is not required for playback.", }),
    0x000000cc: new MatroskaId({ name: 'LaceNumber                 ', level: "5 ", id: "000000cc", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "0                             ", type: "u", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "The reverse number of the frame in the lace (0 is the last frame, 1 is the next to last, etc). While there are a few files in the wild with this Element, it is no longer in use and has been deprecated. Being able to interpret this Element is not required for playback.", }),
    0x000000cd: new MatroskaId({ name: 'FrameNumber                ', level: "5 ", id: "000000cd", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "0                             ", type: "u", webm: "-", v1: "-", v2: "-", v3: "-", v4: "-", description: "The number of the frame to generate from this lace with this delay (allow you to generate many frames from the same Block/Frame).", }),
    0x000000cb: new MatroskaId({ name: 'BlockAdditionID            ', level: "5 ", id: "000000cb", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "0                             ", type: "u", webm: "-", v1: "-", v2: "-", v3: "-", v4: "-", description: "The ID of the BlockAdditional Element (0 is the main Block).", }),
    0x000000ce: new MatroskaId({ name: 'Delay                      ', level: "5 ", id: "000000ce", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "0                             ", type: "u", webm: "-", v1: "-", v2: "-", v3: "-", v4: "-", description: "The (scaled) delay to apply to the Element.", }),
    0x000000cf: new MatroskaId({ name: 'SliceDuration              ', level: "5 ", id: "000000cf", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "0                             ", type: "u", webm: "-", v1: "-", v2: "-", v3: "-", v4: "-", description: "The (scaled) duration to apply to the Element.", }),
    0x000000c8: new MatroskaId({ name: 'ReferenceFrame             ', level: "3 ", id: "000000c8", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "m", webm: "-", v1: "-", v2: "-", v3: "-", v4: "-", description: "DivX trick track extenstions", }),
    0x000000c9: new MatroskaId({ name: 'ReferenceOffset            ', level: "4 ", id: "000000c9", mandatory: "mand.", multiple: "-    ", range: "-         ", default: "-                             ", type: "u", webm: "-", v1: "-", v2: "-", v3: "-", v4: "-", description: "DivX trick track extenstions", }),
    0x000000ca: new MatroskaId({ name: 'ReferenceTimeCode          ', level: "4 ", id: "000000ca", mandatory: "mand.", multiple: "-    ", range: "-         ", default: "-                             ", type: "u", webm: "-", v1: "-", v2: "-", v3: "-", v4: "-", description: "DivX trick track extenstions", }),
    0x000000af: new MatroskaId({ name: 'EncryptedBlock             ', level: "2 ", id: "000000af", mandatory: "-    ", multiple: "mult.", range: "-         ", default: "-                             ", type: "b", webm: "-", v1: "-", v2: "-", v3: "-", v4: "-", description: "Similar to SimpleBlock but the data inside the Block are Transformed (encrypt and/or signed). (see EncryptedBlock Structure)", }),
    0x1654ae6b: new MatroskaId({ name: 'Tracks                     ', level: "1 ", id: "1654ae6b", mandatory: "-    ", multiple: "mult.", range: "-         ", default: "-                             ", type: "m", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "A Top-Level Element of information with many tracks described.", }),
    0x000000ae: new MatroskaId({ name: 'TrackEntry                 ', level: "2 ", id: "000000ae", mandatory: "mand.", multiple: "mult.", range: "-         ", default: "-                             ", type: "m", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "Describes a track with all Elements.", }),
    0x000000d7: new MatroskaId({ name: 'TrackNumber                ', level: "3 ", id: "000000d7", mandatory: "mand.", multiple: "-    ", range: "not 0     ", default: "-                             ", type: "u", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "The track number as used in the Block Header (using more than 127 tracks is not encouraged, though the design allows an unlimited number).", }),
    0x000073c5: new MatroskaId({ name: 'TrackUID                   ', level: "3 ", id: "000073c5", mandatory: "mand.", multiple: "-    ", range: "not 0     ", default: "-                             ", type: "u", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "A unique ID to identify the Track. This should be kept the same when making a direct stream copy of the Track to another file.", }),
    0x00000083: new MatroskaId({ name: 'TrackType                  ', level: "3 ", id: "00000083", mandatory: "mand.", multiple: "-    ", range: "1-254     ", default: "-                             ", type: "u", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "A set of track types coded on 8 bits (1: video, 2: audio, 3: complex, 0x10: logo, 0x11: subtitle, 0x12: buttons, 0x20: control).", }),
    0x000000b9: new MatroskaId({ name: 'FlagEnabled                ', level: "3 ", id: "000000b9", mandatory: "mand.", multiple: "-    ", range: "0-1       ", default: "1                             ", type: "u", webm: "*", v1: "-", v2: "*", v3: "*", v4: "*", description: "Set if the track is usable. (1 bit)", }),
    0x00000088: new MatroskaId({ name: 'FlagDefault                ', level: "3 ", id: "00000088", mandatory: "mand.", multiple: "-    ", range: "0-1       ", default: "1                             ", type: "u", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "Set if that track (audio, video or subs) SHOULD be active if no language found matches the user preference. (1 bit)", }),
    0x000055aa: new MatroskaId({ name: 'FlagForced                 ', level: "3 ", id: "000055aa", mandatory: "mand.", multiple: "-    ", range: "0-1       ", default: "0                             ", type: "u", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "Set if that track MUST be active during playback. There can be many forced track for a kind (audio, video or subs), the player should select the one which language matches the user preference or the default + forced track. Overlay MAY happen between a forced and non-forced track of the same kind. (1 bit)", }),
    0x0000009c: new MatroskaId({ name: 'FlagLacing                 ', level: "3 ", id: "0000009c", mandatory: "mand.", multiple: "-    ", range: "0-1       ", default: "1                             ", type: "u", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "Set if the track may contain blocks using lacing. (1 bit)", }),
    0x00006de7: new MatroskaId({ name: 'MinCache                   ', level: "3 ", id: "00006de7", mandatory: "mand.", multiple: "-    ", range: "-         ", default: "0                             ", type: "u", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "The minimum number of frames a player should be able to cache during playback. If set to 0, the reference pseudo-cache system is not used.", }),
    0x00006df8: new MatroskaId({ name: 'MaxCache                   ', level: "3 ", id: "00006df8", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "u", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "The maximum cache size required to store referenced frames in and the current frame. 0 means no cache is needed.", }),
    0x0023e383: new MatroskaId({ name: 'DefaultDuration            ', level: "3 ", id: "0023e383", mandatory: "-    ", multiple: "-    ", range: "not 0     ", default: "-                             ", type: "u", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "Number of nanoseconds (not scaled via TimecodeScale) per frame ('frame' in the Matroska sense -- one Element put into a (Simple)Block).", }),
    0x00234e7a: new MatroskaId({ name: 'DefaultDecodedFieldDuration', level: "3 ", id: "00234e7a", mandatory: "-    ", multiple: "-    ", range: "not 0     ", default: "-                             ", type: "u", webm: "-", v1: "-", v2: "-", v3: "-", v4: "*", description: "The period in nanoseconds (not scaled by TimcodeScale) between two successive fields at the output of the decoding process (see the notes)", }),
    0x0023314f: new MatroskaId({ name: 'TrackTimecodeScale         ', level: "3 ", id: "0023314f", mandatory: "mand.", multiple: "-    ", range: "> 0       ", default: "1.0                           ", type: "f", webm: "-", v1: "*", v2: "*", v3: "*", v4: "-", description: "DEPRECATED, DO NOT USE. The scale to apply on this track to work at normal speed in relation with other tracks (mostly used to adjust video speed when the audio length differs).", }),
    0x0000537f: new MatroskaId({ name: 'TrackOffset                ', level: "3 ", id: "0000537f", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "0                             ", type: "i", webm: "-", v1: "-", v2: "-", v3: "-", v4: "-", description: "A value to add to the Block's Timestamp. This can be used to adjust the playback offset of a track.", }),
    0x000055ee: new MatroskaId({ name: 'MaxBlockAdditionID         ', level: "3 ", id: "000055ee", mandatory: "mand.", multiple: "-    ", range: "-         ", default: "0                             ", type: "u", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "The maximum value of BlockAddID. A value 0 means there is no BlockAdditions for this track.", }),
    0x0000536e: new MatroskaId({ name: 'Name                       ', level: "3 ", id: "0000536e", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "e", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "A human-readable track name.", }),
    0x0022b59c: new MatroskaId({ name: 'Language                   ', level: "3 ", id: "0022b59c", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "eng                           ", type: "s", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "Specifies the language of the track in the Matroska languages form.", }),
    0x00000086: new MatroskaId({ name: 'CodecID                    ', level: "3 ", id: "00000086", mandatory: "mand.", multiple: "-    ", range: "-         ", default: "-                             ", type: "s", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "An ID corresponding to the codec, see the codec page for more info.", }),
    0x000063a2: new MatroskaId({ name: 'CodecPrivate               ', level: "3 ", id: "000063a2", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "b", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "Private data only known to the codec.", }),
    0x00258688: new MatroskaId({ name: 'CodecName                  ', level: "3 ", id: "00258688", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "e", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "A human-readable string specifying the codec.", }),
    0x00007446: new MatroskaId({ name: 'AttachmentLink             ', level: "3 ", id: "00007446", mandatory: "-    ", multiple: "-    ", range: "not 0     ", default: "-                             ", type: "u", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "The UID of an attachment that is used by this codec.", }),
    0x003a9697: new MatroskaId({ name: 'CodecSettings              ', level: "3 ", id: "003a9697", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "e", webm: "-", v1: "-", v2: "-", v3: "-", v4: "-", description: "A string describing the encoding setting used.", }),
    0x003b4040: new MatroskaId({ name: 'CodecInfoURL               ', level: "3 ", id: "003b4040", mandatory: "-    ", multiple: "mult.", range: "-         ", default: "-                             ", type: "s", webm: "-", v1: "-", v2: "-", v3: "-", v4: "-", description: "A URL to find information about the codec used.", }),
    0x0026b240: new MatroskaId({ name: 'CodecDownloadURL           ', level: "3 ", id: "0026b240", mandatory: "-    ", multiple: "mult.", range: "-         ", default: "-                             ", type: "s", webm: "-", v1: "-", v2: "-", v3: "-", v4: "-", description: "A URL to download about the codec used.", }),
    0x000000aa: new MatroskaId({ name: 'CodecDecodeAll             ', level: "3 ", id: "000000aa", mandatory: "mand.", multiple: "-    ", range: "0-1       ", default: "1                             ", type: "u", webm: "-", v1: "-", v2: "*", v3: "*", v4: "*", description: "The codec can decode potentially damaged data (1 bit).", }),
    0x00006fab: new MatroskaId({ name: 'TrackOverlay               ', level: "3 ", id: "00006fab", mandatory: "-    ", multiple: "mult.", range: "-         ", default: "-                             ", type: "u", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "Specify that this track is an overlay track for the Track specified (in the u-integer). That means when this track has a gap (see SilentTracks) the overlay track should be used instead. The order of multiple TrackOverlay matters, the first one is the one that should be used. If not found it should be the second, etc.", }),
    0x000056aa: new MatroskaId({ name: 'CodecDelay                 ', level: "3 ", id: "000056aa", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "0                             ", type: "u", webm: "*", v1: "-", v2: "-", v3: "-", v4: "*", description: "CodecDelay is The codec-built-in delay in nanoseconds. This value must be subtracted from each block timestamp in order to get the actual timestamp. The value should be small so the muxing of tracks with the same actual timestamp are in the same Cluster.", }),
    0x000056bb: new MatroskaId({ name: 'SeekPreRoll                ', level: "3 ", id: "000056bb", mandatory: "mand.", multiple: "-    ", range: "-         ", default: "0                             ", type: "u", webm: "*", v1: "-", v2: "-", v3: "-", v4: "*", description: "After a discontinuity, SeekPreRoll is the duration in nanoseconds of the data the decoder must decode before the decoded data is valid.", }),
    0x00006624: new MatroskaId({ name: 'TrackTranslate             ', level: "3 ", id: "00006624", mandatory: "-    ", multiple: "mult.", range: "-         ", default: "-                             ", type: "m", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "The track identification for the given Chapter Codec.", }),
    0x000066fc: new MatroskaId({ name: 'TrackTranslateEditionUID   ', level: "4 ", id: "000066fc", mandatory: "-    ", multiple: "mult.", range: "-         ", default: "-                             ", type: "u", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "Specify an edition UID on which this translation applies. When not specified, it means for all editions found in the Segment.", }),
    0x000066bf: new MatroskaId({ name: 'TrackTranslateCodec        ', level: "4 ", id: "000066bf", mandatory: "mand.", multiple: "-    ", range: "-         ", default: "-                             ", type: "u", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "The chapter codec using this ID (0: Matroska Script, 1: DVD-menu).", }),
    0x000066a5: new MatroskaId({ name: 'TrackTranslateTrackID      ', level: "4 ", id: "000066a5", mandatory: "mand.", multiple: "-    ", range: "-         ", default: "-                             ", type: "b", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "The binary value used to represent this track in the chapter codec data. The format depends on the ChapProcessCodecID used.", }),
    0x000000e0: new MatroskaId({ name: 'Video                      ', level: "3 ", id: "000000e0", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "m", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "Video settings.", }),
    0x0000009a: new MatroskaId({ name: 'FlagInterlaced             ', level: "4 ", id: "0000009a", mandatory: "mand.", multiple: "-    ", range: "0-2       ", default: "0                             ", type: "u", webm: "*", v1: "-", v2: "*", v3: "*", v4: "*", description: "A flag to declare is the video is known to be progressive or interlaced and if applicable to declare details about the interlacement. (0: undetermined, 1: interlaced, 2: progressive)", }),
    0x0000009d: new MatroskaId({ name: 'FieldOrder                 ', level: "4 ", id: "0000009d", mandatory: "mand.", multiple: "-    ", range: "0-14      ", default: "2                             ", type: "u", webm: "-", v1: "-", v2: "-", v3: "-", v4: "*", description: "Declare the field ordering of the video. If FlagInterlaced is not set to 1, this Element MUST be ignored. (0: Progressive, 1: Interlaced with top field display first and top field stored first, 2: Undetermined field order, 6: Interlaced with bottom field displayed first and bottom field stored first, 9: Interlaced with bottom field displayed first and top field stored first, 14: Interlaced with top field displayed first and bottom field stored first)", }),
    0x000053b8: new MatroskaId({ name: 'StereoMode                 ', level: "4 ", id: "000053b8", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "0                             ", type: "u", webm: "*", v1: "-", v2: "-", v3: "*", v4: "*", description: "Stereo-3D video mode (0: mono, 1: side by side (left eye is first), 2: top-bottom (right eye is first), 3: top-bottom (left eye is first), 4: checkboard (right is first), 5: checkboard (left is first), 6: row interleaved (right is first), 7: row interleaved (left is first), 8: column interleaved (right is first), 9: column interleaved (left is first), 10: anaglyph (cyan/red), 11: side by side (right eye is first), 12: anaglyph (green/magenta), 13 both eyes laced in one Block (left eye is first), 14 both eyes laced in one Block (right eye is first)) . There are some more details on 3D support in the Specification Notes.", }),
    0x000053c0: new MatroskaId({ name: 'AlphaMode                  ', level: "4 ", id: "000053c0", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "0                             ", type: "u", webm: "*", v1: "-", v2: "-", v3: "*", v4: "*", description: "Alpha Video Mode. Presence of this Element indicates that the BlockAdditional Element could contain Alpha data.", }),
    0x000053b9: new MatroskaId({ name: 'OldStereoMode              ', level: "4 ", id: "000053b9", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "u", webm: "-", v1: "-", v2: "-", v3: "-", v4: "-", description: "DEPRECATED, DO NOT USE. Bogus StereoMode value used in old versions of libmatroska. (0: mono, 1: right eye, 2: left eye, 3: both eyes).", }),
    0x000000b0: new MatroskaId({ name: 'PixelWidth                 ', level: "4 ", id: "000000b0", mandatory: "mand.", multiple: "-    ", range: "not 0     ", default: "-                             ", type: "u", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "Width of the encoded video frames in pixels.", }),
    0x000000ba: new MatroskaId({ name: 'PixelHeight                ', level: "4 ", id: "000000ba", mandatory: "mand.", multiple: "-    ", range: "not 0     ", default: "-                             ", type: "u", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "Height of the encoded video frames in pixels.", }),
    0x000054aa: new MatroskaId({ name: 'PixelCropBottom            ', level: "4 ", id: "000054aa", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "0                             ", type: "u", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "The number of video pixels to remove at the bottom of the image (for HDTV content).", }),
    0x000054bb: new MatroskaId({ name: 'PixelCropTop               ', level: "4 ", id: "000054bb", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "0                             ", type: "u", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "The number of video pixels to remove at the top of the image.", }),
    0x000054cc: new MatroskaId({ name: 'PixelCropLeft              ', level: "4 ", id: "000054cc", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "0                             ", type: "u", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "The number of video pixels to remove on the left of the image.", }),
    0x000054dd: new MatroskaId({ name: 'PixelCropRight             ', level: "4 ", id: "000054dd", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "0                             ", type: "u", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "The number of video pixels to remove on the right of the image.", }),
    0x000054b0: new MatroskaId({ name: 'DisplayWidth               ', level: "4 ", id: "000054b0", mandatory: "-    ", multiple: "-    ", range: "not 0     ", default: "PixelWidth- PixelCropLeft - Pi", type: "u", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "Width of the video frames to display. Applies to the video frame after cropping (PixelCrop* Elements). The default value is only valid when DisplayUnit is 0.", }),
    0x000054ba: new MatroskaId({ name: 'DisplayHeight              ', level: "4 ", id: "000054ba", mandatory: "-    ", multiple: "-    ", range: "not 0     ", default: "PixelHeight- PixelCropTop - Pi", type: "u", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "Height of the video frames to display. Applies to the video frame after cropping (PixelCrop* Elements). The default value is only valid when DisplayUnit is 0.", }),
    0x000054b2: new MatroskaId({ name: 'DisplayUnit                ', level: "4 ", id: "000054b2", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "0                             ", type: "u", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "How DisplayWidth & DisplayHeight should be interpreted (0: pixels, 1: centimeters, 2: inches, 3: Display Aspect Ratio).", }),
    0x000054b3: new MatroskaId({ name: 'AspectRatioType            ', level: "4 ", id: "000054b3", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "0                             ", type: "u", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "Specify the possible modifications to the aspect ratio (0: free resizing, 1: keep aspect ratio, 2: fixed).", }),
    0x002eb524: new MatroskaId({ name: 'ColourSpace                ', level: "4 ", id: "002eb524", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "b", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "Same value as in AVI (32 bits).", }),
    0x002fb523: new MatroskaId({ name: 'GammaValue                 ', level: "4 ", id: "002fb523", mandatory: "-    ", multiple: "-    ", range: "> 0       ", default: "-                             ", type: "f", webm: "-", v1: "-", v2: "-", v3: "-", v4: "-", description: "Gamma Value.", }),
    0x002383e3: new MatroskaId({ name: 'FrameRate                  ', level: "4 ", id: "002383e3", mandatory: "-    ", multiple: "-    ", range: "> 0       ", default: "-                             ", type: "f", webm: "-", v1: "-", v2: "-", v3: "-", v4: "-", description: "Number of frames per second. Informational only.", }),
    0x000055b0: new MatroskaId({ name: 'Colour                     ', level: "4 ", id: "000055b0", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "m", webm: "-", v1: "-", v2: "-", v3: "-", v4: "*", description: "Settings describing the colour format.", }),
    0x000055b1: new MatroskaId({ name: 'MatrixCoefficients         ', level: "5 ", id: "000055b1", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "2                             ", type: "u", webm: "-", v1: "-", v2: "-", v3: "-", v4: "*", description: "The Matrix Coefficients of the video used to derive luma and chroma values from reg, green, and blue color primaries. For clarity, the value and meanings for MatrixCoefficients are adopted from Table 4 of ISO/IEC 23001-8:2013/DCOR1. (0:GBR, 1: BT709, 2: Unspecified, 3: Reserved, 4: FCC, 5: BT470BG, 6: SMPTE 170M, 7: SMPTE 240M, 8: YCOCG, 9: BT2020 Non-constant Luminance, 10: BT2020 Constant Luminance)", }),
    0x000055b2: new MatroskaId({ name: 'BitsPerChannel             ', level: "5 ", id: "000055b2", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "0                             ", type: "u", webm: "-", v1: "-", v2: "-", v3: "-", v4: "*", description: "Number of decoded bits per channel. A value of 0 indicates that the BitsPerChannel is unspecified.", }),
    0x000055b3: new MatroskaId({ name: 'ChromaSubsamplingHorz      ', level: "5 ", id: "000055b3", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "u", webm: "-", v1: "-", v2: "-", v3: "-", v4: "*", description: "The amount of pixels to remove in the Cr and Cb channels for every pixel not removed horizontally. Example: For video with 4:2:0 chroma subsampling, the ChromaSubsamplingHorz should be set to 1.", }),
    0x000055b4: new MatroskaId({ name: 'ChromaSubsamplingVert      ', level: "5 ", id: "000055b4", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "u", webm: "-", v1: "-", v2: "-", v3: "-", v4: "*", description: "The amount of pixels to remove in the Cr and Cb channels for every pixel not removed vertically. Example: For video with 4:2:0 chroma subsampling, the ChromaSubsamplingVert should be set to 1.", }),
    0x000055b5: new MatroskaId({ name: 'CbSubsamplingHorz          ', level: "5 ", id: "000055b5", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "u", webm: "-", v1: "-", v2: "-", v3: "-", v4: "*", description: "The amount of pixels to remove in the Cb channel for every pixel not removed horizontally. This is additive with ChromaSubsamplingHorz. Example: For video with 4:2:1 chroma subsampling, the ChromaSubsamplingHorz should be set to 1 and CbSubsamplingHorz should be set to 1.", }),
    0x000055b6: new MatroskaId({ name: 'CbSubsamplingVert          ', level: "5 ", id: "000055b6", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "u", webm: "-", v1: "-", v2: "-", v3: "-", v4: "*", description: "The amount of pixels to remove in the Cb channel for every pixel not removed vertically. This is additive with ChromaSubsamplingVert.", }),
    0x000055b7: new MatroskaId({ name: 'ChromaSitingHorz           ', level: "5 ", id: "000055b7", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "0                             ", type: "u", webm: "-", v1: "-", v2: "-", v3: "-", v4: "*", description: "How chroma is subsampled horizontally. (0: Unspecified, 1: Left Collocated, 2: Half)", }),
    0x000055b8: new MatroskaId({ name: 'ChromaSitingVert           ', level: "5 ", id: "000055b8", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "0                             ", type: "u", webm: "-", v1: "-", v2: "-", v3: "-", v4: "*", description: "How chroma is subsampled vertically. (0: Unspecified, 1: Top Collocated, 2: Half)", }),
    0x000055b9: new MatroskaId({ name: 'Range                      ', level: "5 ", id: "000055b9", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "0                             ", type: "u", webm: "-", v1: "-", v2: "-", v3: "-", v4: "*", description: "Clipping of the color ranges. (0: Unspecified, 1: Broadcast Range, 2: Full range (no clipping), 3: Defined by MatrixCoefficients/TransferCharacteristics)", }),
    0x000055ba: new MatroskaId({ name: 'TransferCharacteristics    ', level: "5 ", id: "000055ba", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "2                             ", type: "u", webm: "-", v1: "-", v2: "-", v3: "-", v4: "*", description: "The transfer characteristics of the video. For clarity, the value and meanings for TransferCharacteristics 1-15 are adopted from Table 3 of ISO/IEC 23001-8:2013/DCOR1. TransferCharacteristics 16-18 are proposed values. (0: Reserved, 1: ITU-R BT.709, 2: Unspecified, 3: Reserved, 4: Gamma 2.2 curve, 5: Gamma 2.8 curve, 6: SMPTE 170M, 7: SMPTE 240M, 8: Linear, 9: Log, 10: Log Sqrt, 11: IEC 61966-2-4, 12: ITU-R BT.1361 Extended Colour Gamut, 13: IEC 61966-2-1, 14: ITU-R BT.2020 10 bit, 15: ITU-R BT.2020 12 bit, 16: SMPTE ST 2084, 17: SMPTE ST 428-1 18: ARIB STD-B67 (HLG))", }),
    0x000055bb: new MatroskaId({ name: 'Primaries                  ', level: "5 ", id: "000055bb", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "2                             ", type: "u", webm: "-", v1: "-", v2: "-", v3: "-", v4: "*", description: "The colour primaries of the video. For clarity, the value and meanings for Primaries are adopted from Table 2 of ISO/IEC 23001-8:2013/DCOR1. (0: Reserved, 1: ITU-R BT.709, 2: Unspecified, 3: Reserved, 4: ITU-R BT.470M, 5: ITU-R BT.470BG, 6: SMPTE 170M, 7: SMPTE 240M, 8: FILM, 9: ITU-R BT.2020, 10: SMPTE ST 428-1, 22: JEDEC P22 phosphors)", }),
    0x000055bc: new MatroskaId({ name: 'MaxCLL                     ', level: "5 ", id: "000055bc", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "u", webm: "-", v1: "-", v2: "-", v3: "-", v4: "*", description: "Maximum brightness of a single pixel (Maximum Content Light Level) in candelas per square meter (cd/m²).", }),
    0x000055bd: new MatroskaId({ name: 'MaxFALL                    ', level: "5 ", id: "000055bd", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "u", webm: "-", v1: "-", v2: "-", v3: "-", v4: "*", description: "Maximum brightness of a single full frame (Maximum Frame-Average Light Level) in candelas per square meter (cd/m²).", }),
    0x000055d0: new MatroskaId({ name: 'MasteringMetadata          ', level: "5 ", id: "000055d0", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "m", webm: "-", v1: "-", v2: "-", v3: "-", v4: "*", description: "SMPTE 2086 mastering data.", }),
    0x000055d1: new MatroskaId({ name: 'PrimaryRChromaticityX      ', level: "6 ", id: "000055d1", mandatory: "-    ", multiple: "-    ", range: "0-1       ", default: "-                             ", type: "f", webm: "-", v1: "-", v2: "-", v3: "-", v4: "*", description: "Red X chromaticity coordinate as defined by CIE 1931.", }),
    0x000055d2: new MatroskaId({ name: 'PrimaryRChromaticityY      ', level: "6 ", id: "000055d2", mandatory: "-    ", multiple: "-    ", range: "0-1       ", default: "-                             ", type: "f", webm: "-", v1: "-", v2: "-", v3: "-", v4: "*", description: "Red Y chromaticity coordinate as defined by CIE 1931.", }),
    0x000055d3: new MatroskaId({ name: 'PrimaryGChromaticityX      ', level: "6 ", id: "000055d3", mandatory: "-    ", multiple: "-    ", range: "0-1       ", default: "-                             ", type: "f", webm: "-", v1: "-", v2: "-", v3: "-", v4: "*", description: "Green X chromaticity coordinate as defined by CIE 1931.", }),
    0x000055d4: new MatroskaId({ name: 'PrimaryGChromaticityY      ', level: "6 ", id: "000055d4", mandatory: "-    ", multiple: "-    ", range: "0-1       ", default: "-                             ", type: "f", webm: "-", v1: "-", v2: "-", v3: "-", v4: "*", description: "Green Y chromaticity coordinate as defined by CIE 1931.", }),
    0x000055d5: new MatroskaId({ name: 'PrimaryBChromaticityX      ', level: "6 ", id: "000055d5", mandatory: "-    ", multiple: "-    ", range: "0-1       ", default: "-                             ", type: "f", webm: "-", v1: "-", v2: "-", v3: "-", v4: "*", description: "Blue X chromaticity coordinate as defined by CIE 1931.", }),
    0x000055d6: new MatroskaId({ name: 'PrimaryBChromaticityY      ', level: "6 ", id: "000055d6", mandatory: "-    ", multiple: "-    ", range: "0-1       ", default: "-                             ", type: "f", webm: "-", v1: "-", v2: "-", v3: "-", v4: "*", description: "Blue Y chromaticity coordinate as defined by CIE 1931.", }),
    0x000055d7: new MatroskaId({ name: 'WhitePointChromaticityX    ', level: "6 ", id: "000055d7", mandatory: "-    ", multiple: "-    ", range: "0-1       ", default: "-                             ", type: "f", webm: "-", v1: "-", v2: "-", v3: "-", v4: "*", description: "White X chromaticity coordinate as defined by CIE 1931.", }),
    0x000055d8: new MatroskaId({ name: 'WhitePointChromaticityY    ', level: "6 ", id: "000055d8", mandatory: "-    ", multiple: "-    ", range: "0-1       ", default: "-                             ", type: "f", webm: "-", v1: "-", v2: "-", v3: "-", v4: "*", description: "White Y chromaticity coordinate as defined by CIE 1931.", }),
    0x000055d9: new MatroskaId({ name: 'LuminanceMax               ', level: "6 ", id: "000055d9", mandatory: "-    ", multiple: "-    ", range: "0-9999.99 ", default: "-                             ", type: "f", webm: "-", v1: "-", v2: "-", v3: "-", v4: "*", description: "Maximum luminance. Shall be represented in candelas per square meter (cd/m²).", }),
    0x000055da: new MatroskaId({ name: 'LuminanceMin               ', level: "6 ", id: "000055da", mandatory: "-    ", multiple: "-    ", range: "0-999.9999", default: "-                             ", type: "f", webm: "-", v1: "-", v2: "-", v3: "-", v4: "*", description: "Mininum luminance. Shall be represented in candelas per square meter (cd/m²).", }),
    0x000000e1: new MatroskaId({ name: 'Audio                      ', level: "3 ", id: "000000e1", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "m", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "Audio settings.", }),
    0x000000b5: new MatroskaId({ name: 'SamplingFrequency          ', level: "4 ", id: "000000b5", mandatory: "mand.", multiple: "-    ", range: "> 0       ", default: "8000.0                        ", type: "f", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "Sampling frequency in Hz.", }),
    0x000078b5: new MatroskaId({ name: 'OutputSamplingFrequency    ', level: "4 ", id: "000078b5", mandatory: "-    ", multiple: "-    ", range: "> 0       ", default: "-amplingFrequency             ", type: "f", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "Real output sampling frequency in Hz (used for SBR techniques).", }),
    0x0000009f: new MatroskaId({ name: 'Channels                   ', level: "4 ", id: "0000009f", mandatory: "mand.", multiple: "-    ", range: "not 0     ", default: "1                             ", type: "u", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "Numbers of channels in the track.", }),
    0x00007d7b: new MatroskaId({ name: 'ChannelPositions           ', level: "4 ", id: "00007d7b", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "b", webm: "-", v1: "-", v2: "-", v3: "-", v4: "-", description: "Table of horizontal angles for each successive channel, see appendix.", }),
    0x00006264: new MatroskaId({ name: 'BitDepth                   ', level: "4 ", id: "00006264", mandatory: "-    ", multiple: "-    ", range: "not 0     ", default: "-                             ", type: "u", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "Bits per sample, mostly used for PCM.", }),
    0x000000e2: new MatroskaId({ name: 'TrackOperation             ', level: "3 ", id: "000000e2", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "m", webm: "-", v1: "-", v2: "-", v3: "*", v4: "*", description: "Operation that needs to be applied on tracks to create this virtual track. For more details look at the Specification Notes on the subject.", }),
    0x000000e3: new MatroskaId({ name: 'TrackCombinePlanes         ', level: "4 ", id: "000000e3", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "m", webm: "-", v1: "-", v2: "-", v3: "*", v4: "*", description: "Contains the list of all video plane tracks that need to be combined to create this 3D track", }),
    0x000000e4: new MatroskaId({ name: 'TrackPlane                 ', level: "5 ", id: "000000e4", mandatory: "mand.", multiple: "mult.", range: "-         ", default: "-                             ", type: "m", webm: "-", v1: "-", v2: "-", v3: "*", v4: "*", description: "Contains a video plane track that need to be combined to create this 3D track", }),
    0x000000e5: new MatroskaId({ name: 'TrackPlaneUID              ', level: "6 ", id: "000000e5", mandatory: "mand.", multiple: "-    ", range: "not 0     ", default: "-                             ", type: "u", webm: "-", v1: "-", v2: "-", v3: "*", v4: "*", description: "The trackUID number of the track representing the plane.", }),
    0x000000e6: new MatroskaId({ name: 'TrackPlaneType             ', level: "6 ", id: "000000e6", mandatory: "mand.", multiple: "-    ", range: "-         ", default: "-                             ", type: "u", webm: "-", v1: "-", v2: "-", v3: "*", v4: "*", description: "The kind of plane this track corresponds to (0: left eye, 1: right eye, 2: background).", }),
    0x000000e9: new MatroskaId({ name: 'TrackJoinBlocks            ', level: "4 ", id: "000000e9", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "m", webm: "-", v1: "-", v2: "-", v3: "*", v4: "*", description: "Contains the list of all tracks whose Blocks need to be combined to create this virtual track", }),
    0x000000ed: new MatroskaId({ name: 'TrackJoinUID               ', level: "5 ", id: "000000ed", mandatory: "mand.", multiple: "mult.", range: "not 0     ", default: "-                             ", type: "u", webm: "-", v1: "-", v2: "-", v3: "*", v4: "*", description: "The trackUID number of a track whose blocks are used to create this virtual track.", }),
    0x000000c0: new MatroskaId({ name: 'TrickTrackUID              ', level: "3 ", id: "000000c0", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "u", webm: "-", v1: "-", v2: "-", v3: "-", v4: "-", description: "DivX trick track extenstions", }),
    0x000000c1: new MatroskaId({ name: 'TrickTrackSegmentUID       ', level: "3 ", id: "000000c1", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "b", webm: "-", v1: "-", v2: "-", v3: "-", v4: "-", description: "DivX trick track extenstions", }),
    0x000000c6: new MatroskaId({ name: 'TrickTrackFlag             ', level: "3 ", id: "000000c6", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "0                             ", type: "u", webm: "-", v1: "-", v2: "-", v3: "-", v4: "-", description: "DivX trick track extenstions", }),
    0x000000c7: new MatroskaId({ name: 'TrickMasterTrackUID        ', level: "3 ", id: "000000c7", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "u", webm: "-", v1: "-", v2: "-", v3: "-", v4: "-", description: "DivX trick track extenstions", }),
    0x000000c4: new MatroskaId({ name: 'TrickMasterTrackSegmentUID ', level: "3 ", id: "000000c4", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "b", webm: "-", v1: "-", v2: "-", v3: "-", v4: "-", description: "DivX trick track extenstions", }),
    0x00006d80: new MatroskaId({ name: 'ContentEncodings           ', level: "3 ", id: "00006d80", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "m", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "Settings for several content encoding mechanisms like compression or encryption.", }),
    0x00006240: new MatroskaId({ name: 'ContentEncoding            ', level: "4 ", id: "00006240", mandatory: "mand.", multiple: "mult.", range: "-         ", default: "-                             ", type: "m", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "Settings for one content encoding like compression or encryption.", }),
    0x00005031: new MatroskaId({ name: 'ContentEncodingOrder       ', level: "5 ", id: "00005031", mandatory: "mand.", multiple: "-    ", range: "-         ", default: "0                             ", type: "u", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "Tells when this modification was used during encoding/muxing starting with 0 and counting upwards. The decoder/demuxer has to start with the highest order number it finds and work its way down. This value has to be unique over all ContentEncodingOrder Elements in the Segment.", }),
    0x00005032: new MatroskaId({ name: 'ContentEncodingScope       ', level: "5 ", id: "00005032", mandatory: "mand.", multiple: "-    ", range: "not 0     ", default: "1                             ", type: "u", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "A bit field that describes which Elements have been modified in this way. Values (big endian) can be OR'ed. Possible values:\n1 - all frame contents,\n2 - the track's private data,\n4 - the next ContentEncoding (next ContentEncodingOrder. Either the data inside ContentCompression and/or ContentEncryption)", }),
    0x00005033: new MatroskaId({ name: 'ContentEncodingType        ', level: "5 ", id: "00005033", mandatory: "mand.", multiple: "-    ", range: "-         ", default: "0                             ", type: "u", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "A value describing what kind of transformation has been done. Possible values:\n0 - compression,\n1 - encryption", }),
    0x00005034: new MatroskaId({ name: 'ContentCompression         ', level: "5 ", id: "00005034", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "m", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "Settings describing the compression used. Must be present if the value of ContentEncodingType is 0 and absent otherwise. Each block must be decompressable even if no previous block is available in order not to prevent seeking.", }),
    0x00004254: new MatroskaId({ name: 'ContentCompAlgo            ', level: "6 ", id: "00004254", mandatory: "mand.", multiple: "-    ", range: "-         ", default: "0                             ", type: "u", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "The compression algorithm used. Algorithms that have been specified so far are:\n0 - zlib,\n1 - bzlib,\n2 - lzo1x\n3 - Header Stripping", }),
    0x00004255: new MatroskaId({ name: 'ContentCompSettings        ', level: "6 ", id: "00004255", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "b", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "Settings that might be needed by the decompressor. For Header Stripping (ContentCompAlgo=3), the bytes that were removed from the beggining of each frames of the track.", }),
    0x00005035: new MatroskaId({ name: 'ContentEncryption          ', level: "5 ", id: "00005035", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "m", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "Settings describing the encryption used. Must be present if the value of ContentEncodingType is 1 and absent otherwise.", }),
    0x000047e1: new MatroskaId({ name: 'ContentEncAlgo             ', level: "6 ", id: "000047e1", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "0                             ", type: "u", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "The encryption algorithm used. The value '0' means that the contents have not been encrypted but only signed. Predefined values:\n1 - DES, 2 - 3DES, 3 - Twofish, 4 - Blowfish, 5 - AES", }),
    0x000047e2: new MatroskaId({ name: 'ContentEncKeyID            ', level: "6 ", id: "000047e2", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "b", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "For public key algorithms this is the ID of the public key the the data was encrypted with.", }),
    0x000047e3: new MatroskaId({ name: 'ContentSignature           ', level: "6 ", id: "000047e3", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "b", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "A cryptographic signature of the contents.", }),
    0x000047e4: new MatroskaId({ name: 'ContentSigKeyID            ', level: "6 ", id: "000047e4", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "b", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "This is the ID of the private key the data was signed with.", }),
    0x000047e5: new MatroskaId({ name: 'ContentSigAlgo             ', level: "6 ", id: "000047e5", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "0                             ", type: "u", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "The algorithm used for the signature. A value of '0' means that the contents have not been signed but only encrypted. Predefined values:\n1 - RSA", }),
    0x000047e6: new MatroskaId({ name: 'ContentSigHashAlgo         ', level: "6 ", id: "000047e6", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "0                             ", type: "u", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "The hash algorithm used for the signature. A value of '0' means that the contents have not been signed but only encrypted. Predefined values:\n1 - SHA1-160\n2 - MD5", }),
    0x1c53bb6b: new MatroskaId({ name: 'Cues                       ', level: "1 ", id: "1c53bb6b", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "m", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "A Top-Level Element to speed seeking access. All entries are local to the Segment. Should be mandatory for non \"live\" streams.", }),
    0x000000bb: new MatroskaId({ name: 'CuePoint                   ', level: "2 ", id: "000000bb", mandatory: "mand.", multiple: "mult.", range: "-         ", default: "-                             ", type: "m", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "Contains all information relative to a seek point in the Segment.", }),
    0x000000b3: new MatroskaId({ name: 'CueTime                    ', level: "3 ", id: "000000b3", mandatory: "mand.", multiple: "-    ", range: "-         ", default: "-                             ", type: "u", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "Absolute timestamp according to the Segment time base.", }),
    0x000000b7: new MatroskaId({ name: 'CueTrackPositions          ', level: "3 ", id: "000000b7", mandatory: "mand.", multiple: "mult.", range: "-         ", default: "-                             ", type: "m", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "Contain positions for different tracks corresponding to the timestamp.", }),
    0x000000f7: new MatroskaId({ name: 'CueTrack                   ', level: "4 ", id: "000000f7", mandatory: "mand.", multiple: "-    ", range: "not 0     ", default: "-                             ", type: "u", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "The track for which a position is given.", }),
    0x000000f1: new MatroskaId({ name: 'CueClusterPosition         ', level: "4 ", id: "000000f1", mandatory: "mand.", multiple: "-    ", range: "-         ", default: "-                             ", type: "u", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "The position of the Cluster containing the required Block.", }),
    0x000000f0: new MatroskaId({ name: 'CueRelativePosition        ', level: "4 ", id: "000000f0", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "u", webm: "-", v1: "-", v2: "-", v3: "-", v4: "*", description: "The relative position of the referenced block inside the cluster with 0 being the first possible position for an Element inside that cluster.", }),
    0x000000b2: new MatroskaId({ name: 'CueDuration                ', level: "4 ", id: "000000b2", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "u", webm: "-", v1: "-", v2: "-", v3: "-", v4: "*", description: "The duration of the block according to the Segment time base. If missing the track's DefaultDuration does not apply and no duration information is available in terms of the cues.", }),
    0x00005378: new MatroskaId({ name: 'CueBlockNumber             ', level: "4 ", id: "00005378", mandatory: "-    ", multiple: "-    ", range: "not 0     ", default: "1                             ", type: "u", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "Number of the Block in the specified Cluster.", }),
    0x000000ea: new MatroskaId({ name: 'CueCodecState              ', level: "4 ", id: "000000ea", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "0                             ", type: "u", webm: "-", v1: "-", v2: "*", v3: "*", v4: "*", description: "The position of the Codec State corresponding to this Cue Element. 0 means that the data is taken from the initial Track Entry.", }),
    0x000000db: new MatroskaId({ name: 'CueReference               ', level: "4 ", id: "000000db", mandatory: "-    ", multiple: "mult.", range: "-         ", default: "-                             ", type: "m", webm: "-", v1: "-", v2: "*", v3: "*", v4: "*", description: "The Clusters containing the required referenced Blocks.", }),
    0x00000096: new MatroskaId({ name: 'CueRefTime                 ', level: "5 ", id: "00000096", mandatory: "mand.", multiple: "-    ", range: "-         ", default: "-                             ", type: "u", webm: "-", v1: "-", v2: "*", v3: "*", v4: "*", description: "Timestamp of the referenced Block.", }),
    0x00000097: new MatroskaId({ name: 'CueRefCluster              ', level: "5 ", id: "00000097", mandatory: "mand.", multiple: "-    ", range: "-         ", default: "-                             ", type: "u", webm: "-", v1: "-", v2: "-", v3: "-", v4: "-", description: "The Position of the Cluster containing the referenced Block.", }),
    0x0000535f: new MatroskaId({ name: 'CueRefNumber               ', level: "5 ", id: "0000535f", mandatory: "-    ", multiple: "-    ", range: "not 0     ", default: "1                             ", type: "u", webm: "-", v1: "-", v2: "-", v3: "-", v4: "-", description: "Number of the referenced Block of Track X in the specified Cluster.", }),
    0x000000eb: new MatroskaId({ name: 'CueRefCodecState           ', level: "5 ", id: "000000eb", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "0                             ", type: "u", webm: "-", v1: "-", v2: "-", v3: "-", v4: "-", description: "The position of the Codec State corresponding to this referenced Element. 0 means that the data is taken from the initial Track Entry.", }),
    0x1941a469: new MatroskaId({ name: 'Attachments                ', level: "1 ", id: "1941a469", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "m", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "Contain attached files.", }),
    0x000061a7: new MatroskaId({ name: 'AttachedFile               ', level: "2 ", id: "000061a7", mandatory: "mand.", multiple: "mult.", range: "-         ", default: "-                             ", type: "m", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "An attached file.", }),
    0x0000467e: new MatroskaId({ name: 'FileDescription            ', level: "3 ", id: "0000467e", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "e", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "A human-friendly name for the attached file.", }),
    0x0000466e: new MatroskaId({ name: 'FileName                   ', level: "3 ", id: "0000466e", mandatory: "mand.", multiple: "-    ", range: "-         ", default: "-                             ", type: "e", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "Filename of the attached file.", }),
    0x00004660: new MatroskaId({ name: 'FileMimeType               ', level: "3 ", id: "00004660", mandatory: "mand.", multiple: "-    ", range: "-         ", default: "-                             ", type: "s", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "MIME type of the file.", }),
    0x0000465c: new MatroskaId({ name: 'FileData                   ', level: "3 ", id: "0000465c", mandatory: "mand.", multiple: "-    ", range: "-         ", default: "-                             ", type: "b", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "The data of the file.", }),
    0x000046ae: new MatroskaId({ name: 'FileUID                    ', level: "3 ", id: "000046ae", mandatory: "mand.", multiple: "-    ", range: "not 0     ", default: "-                             ", type: "u", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "Unique ID representing the file, as random as possible.", }),
    0x00004675: new MatroskaId({ name: 'FileReferral               ', level: "3 ", id: "00004675", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "b", webm: "-", v1: "-", v2: "-", v3: "-", v4: "-", description: "A binary value that a track/codec can refer to when the attachment is needed.", }),
    0x00004661: new MatroskaId({ name: 'FileUsedStartTime          ', level: "3 ", id: "00004661", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "u", webm: "-", v1: "-", v2: "-", v3: "-", v4: "-", description: "DivX font extension", }),
    0x00004662: new MatroskaId({ name: 'FileUsedEndTime            ', level: "3 ", id: "00004662", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "u", webm: "-", v1: "-", v2: "-", v3: "-", v4: "-", description: "DivX font extension", }),
    0x1043a770: new MatroskaId({ name: 'Chapters                   ', level: "1 ", id: "1043a770", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "m", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "A system to define basic menus and partition data. For more detailed information, look at the Chapters Explanation.", }),
    0x000045b9: new MatroskaId({ name: 'EditionEntry               ', level: "2 ", id: "000045b9", mandatory: "mand.", multiple: "mult.", range: "-         ", default: "-                             ", type: "m", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "Contains all information about a Segment edition.", }),
    0x000045bc: new MatroskaId({ name: 'EditionUID                 ', level: "3 ", id: "000045bc", mandatory: "-    ", multiple: "-    ", range: "not 0     ", default: "-                             ", type: "u", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "A unique ID to identify the edition. It's useful for tagging an edition.", }),
    0x000045bd: new MatroskaId({ name: 'EditionFlagHidden          ', level: "3 ", id: "000045bd", mandatory: "mand.", multiple: "-    ", range: "0-1       ", default: "0                             ", type: "u", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "If an edition is hidden (1), it should not be available to the user interface (but still to Control Tracks; see flag notes). (1 bit)", }),
    0x000045db: new MatroskaId({ name: 'EditionFlagDefault         ', level: "3 ", id: "000045db", mandatory: "mand.", multiple: "-    ", range: "0-1       ", default: "0                             ", type: "u", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "If a flag is set (1) the edition should be used as the default one. (1 bit)", }),
    0x000045dd: new MatroskaId({ name: 'EditionFlagOrdered         ', level: "3 ", id: "000045dd", mandatory: "-    ", multiple: "-    ", range: "0-1       ", default: "0                             ", type: "u", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "Specify if the chapters can be defined multiple times and the order to play them is enforced. (1 bit)", }),
    0x000000b6: new MatroskaId({ name: 'ChapterAtom                ', level: "3+", id: "000000b6", mandatory: "mand.", multiple: "mult.", range: "-         ", default: "-                             ", type: "m", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "Contains the atom information to use as the chapter atom (apply to all tracks).", }),
    0x000073c4: new MatroskaId({ name: 'ChapterUID                 ', level: "4 ", id: "000073c4", mandatory: "mand.", multiple: "-    ", range: "not 0     ", default: "-                             ", type: "u", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "A unique ID to identify the Chapter.", }),
    0x00005654: new MatroskaId({ name: 'ChapterStringUID           ', level: "4 ", id: "00005654", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "e", webm: "*", v1: "-", v2: "-", v3: "*", v4: "*", description: "A unique string ID to identify the Chapter. Use for WebVTT cue identifier storage.", }),
    0x00000091: new MatroskaId({ name: 'ChapterTimeStart           ', level: "4 ", id: "00000091", mandatory: "mand.", multiple: "-    ", range: "-         ", default: "-                             ", type: "u", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "Timestamp of the start of Chapter (not scaled).", }),
    0x00000092: new MatroskaId({ name: 'ChapterTimeEnd             ', level: "4 ", id: "00000092", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "u", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "Timestamp of the end of Chapter (timestamp excluded, not scaled).", }),
    0x00000098: new MatroskaId({ name: 'ChapterFlagHidden          ', level: "4 ", id: "00000098", mandatory: "mand.", multiple: "-    ", range: "0-1       ", default: "0                             ", type: "u", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "If a chapter is hidden (1), it should not be available to the user interface (but still to Control Tracks; see flag notes). (1 bit)", }),
    0x00004598: new MatroskaId({ name: 'ChapterFlagEnabled         ', level: "4 ", id: "00004598", mandatory: "mand.", multiple: "-    ", range: "0-1       ", default: "1                             ", type: "u", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "Specify wether the chapter is enabled. It can be enabled/disabled by a Control Track. When disabled, the movie should skip all the content between the TimeStart and TimeEnd of this chapter (see flag notes). (1 bit)", }),
    0x00006e67: new MatroskaId({ name: 'ChapterSegmentUID          ', level: "4 ", id: "00006e67", mandatory: "-    ", multiple: "-    ", range: ">0        ", default: "-                             ", type: "b", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "A Segment to play in place of this chapter. Edition ChapterSegmentEditionUID should be used for this Segment, otherwise no edition is used.", }),
    0x00006ebc: new MatroskaId({ name: 'ChapterSegmentEditionUID   ', level: "4 ", id: "00006ebc", mandatory: "-    ", multiple: "-    ", range: "not 0     ", default: "-                             ", type: "u", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "The EditionUID to play from the Segment linked in ChapterSegmentUID.", }),
    0x000063c3: new MatroskaId({ name: 'ChapterPhysicalEquiv       ', level: "4 ", id: "000063c3", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "u", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "Specify the physical equivalent of this ChapterAtom like \"DVD\" (60) or \"SIDE\" (50), see complete list of values.", }),
    0x0000008f: new MatroskaId({ name: 'ChapterTrack               ', level: "4 ", id: "0000008f", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "m", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "List of tracks on which the chapter applies. If this Element is not present, all tracks apply", }),
    0x00000089: new MatroskaId({ name: 'ChapterTrackNumber         ', level: "5 ", id: "00000089", mandatory: "mand.", multiple: "mult.", range: "not 0     ", default: "-                             ", type: "u", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "UID of the Track to apply this chapter too. In the absence of a control track, choosing this chapter will select the listed Tracks and deselect unlisted tracks. Absence of this Element indicates that the Chapter should be applied to any currently used Tracks.", }),
    0x00000080: new MatroskaId({ name: 'ChapterDisplay             ', level: "4 ", id: "00000080", mandatory: "-    ", multiple: "mult.", range: "-         ", default: "-                             ", type: "m", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "Contains all possible strings to use for the chapter display.", }),
    0x00000085: new MatroskaId({ name: 'ChapString                 ', level: "5 ", id: "00000085", mandatory: "mand.", multiple: "-    ", range: "-         ", default: "-                             ", type: "e", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "Contains the string to use as the chapter atom.", }),
    0x0000437c: new MatroskaId({ name: 'ChapLanguage               ', level: "5 ", id: "0000437c", mandatory: "mand.", multiple: "mult.", range: "-         ", default: "eng                           ", type: "s", webm: "*", v1: "*", v2: "*", v3: "*", v4: "*", description: "The languages corresponding to the string, in the bibliographic ISO-639-2 form.", }),
    0x0000437e: new MatroskaId({ name: 'ChapCountry                ', level: "5 ", id: "0000437e", mandatory: "-    ", multiple: "mult.", range: "-         ", default: "-                             ", type: "s", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "The countries corresponding to the string, same 2 octets as in Internet domains.", }),
    0x00006944: new MatroskaId({ name: 'ChapProcess                ', level: "4 ", id: "00006944", mandatory: "-    ", multiple: "mult.", range: "-         ", default: "-                             ", type: "m", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "Contains all the commands associated to the Atom.", }),
    0x00006955: new MatroskaId({ name: 'ChapProcessCodecID         ', level: "5 ", id: "00006955", mandatory: "mand.", multiple: "-    ", range: "-         ", default: "0                             ", type: "u", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "Contains the type of the codec used for the processing. A value of 0 means native Matroska processing (to be defined), a value of 1 means the DVD command set is used. More codec IDs can be added later.", }),
    0x0000450d: new MatroskaId({ name: 'ChapProcessPrivate         ', level: "5 ", id: "0000450d", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "b", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "Some optional data attached to the ChapProcessCodecID information. For ChapProcessCodecID = 1, it is the \"DVD level\" equivalent.", }),
    0x00006911: new MatroskaId({ name: 'ChapProcessCommand         ', level: "5 ", id: "00006911", mandatory: "-    ", multiple: "mult.", range: "-         ", default: "-                             ", type: "m", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "Contains all the commands associated to the Atom.", }),
    0x00006922: new MatroskaId({ name: 'ChapProcessTime            ', level: "6 ", id: "00006922", mandatory: "mand.", multiple: "-    ", range: "-         ", default: "-                             ", type: "u", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "Defines when the process command should be handled (0: during the whole chapter, 1: before starting playback, 2: after playback of the chapter).", }),
    0x00006933: new MatroskaId({ name: 'ChapProcessData            ', level: "6 ", id: "00006933", mandatory: "mand.", multiple: "-    ", range: "-         ", default: "-                             ", type: "b", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "Contains the command information. The data should be interpreted depending on the ChapProcessCodecID value. For ChapProcessCodecID = 1, the data correspond to the binary DVD cell pre/post commands.", }),
    0x1254c367: new MatroskaId({ name: 'Tags                       ', level: "1 ", id: "1254c367", mandatory: "-    ", multiple: "mult.", range: "-         ", default: "-                             ", type: "m", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "Element containing Elements specific to Tracks/Chapters. A list of valid tags can be found here.", }),
    0x00007373: new MatroskaId({ name: 'Tag                        ', level: "2 ", id: "00007373", mandatory: "mand.", multiple: "mult.", range: "-         ", default: "-                             ", type: "m", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "Element containing Elements specific to Tracks/Chapters.", }),
    0x000063c0: new MatroskaId({ name: 'Targets                    ', level: "3 ", id: "000063c0", mandatory: "mand.", multiple: "-    ", range: "-         ", default: "-                             ", type: "m", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "Contain all UIDs where the specified meta data apply. It is empty to describe everything in the Segment.", }),
    0x000068ca: new MatroskaId({ name: 'TargetTypeValue            ', level: "4 ", id: "000068ca", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "50                            ", type: "u", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "A number to indicate the logical level of the target (see TargetType).", }),
    0x000063ca: new MatroskaId({ name: 'TargetType                 ', level: "4 ", id: "000063ca", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "s", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "An informational string that can be used to display the logical level of the target like \"ALBUM\", \"TRACK\", \"MOVIE\", \"CHAPTER\", etc (see TargetType).", }),
    0x000063c5: new MatroskaId({ name: 'TagTrackUID                ', level: "4 ", id: "000063c5", mandatory: "-    ", multiple: "mult.", range: "-         ", default: "0                             ", type: "u", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "A unique ID to identify the Track(s) the tags belong to. If the value is 0 at this level, the tags apply to all tracks in the Segment.", }),
    0x000063c9: new MatroskaId({ name: 'TagEditionUID              ', level: "4 ", id: "000063c9", mandatory: "-    ", multiple: "mult.", range: "-         ", default: "0                             ", type: "u", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "A unique ID to identify the EditionEntry(s) the tags belong to. If the value is 0 at this level, the tags apply to all editions in the Segment.", }),
    0x000063c4: new MatroskaId({ name: 'TagChapterUID              ', level: "4 ", id: "000063c4", mandatory: "-    ", multiple: "mult.", range: "-         ", default: "0                             ", type: "u", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "A unique ID to identify the Chapter(s) the tags belong to. If the value is 0 at this level, the tags apply to all chapters in the Segment.", }),
    0x000063c6: new MatroskaId({ name: 'TagAttachmentUID           ', level: "4 ", id: "000063c6", mandatory: "-    ", multiple: "mult.", range: "-         ", default: "0                             ", type: "u", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "A unique ID to identify the Attachment(s) the tags belong to. If the value is 0 at this level, the tags apply to all the attachments in the Segment.", }),
    0x000067c8: new MatroskaId({ name: 'SimpleTag                  ', level: "3+", id: "000067c8", mandatory: "mand.", multiple: "mult.", range: "-         ", default: "-                             ", type: "m", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "Contains general information about the target.", }),
    0x000045a3: new MatroskaId({ name: 'TagName                    ', level: "4 ", id: "000045a3", mandatory: "mand.", multiple: "-    ", range: "-         ", default: "-                             ", type: "e", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "The name of the Tag that is going to be stored.", }),
    0x0000447a: new MatroskaId({ name: 'TagLanguage                ', level: "4 ", id: "0000447a", mandatory: "mand.", multiple: "-    ", range: "-         ", default: "und                           ", type: "s", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "Specifies the language of the tag specified, in the Matroska languages form.", }),
    0x00004484: new MatroskaId({ name: 'TagDefault                 ', level: "4 ", id: "00004484", mandatory: "mand.", multiple: "-    ", range: "0-1       ", default: "1                             ", type: "u", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "Indication to know if this is the default/original language to use for the given tag. (1 bit)", }),
    0x00004487: new MatroskaId({ name: 'TagString                  ', level: "4 ", id: "00004487", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "e", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "The value of the Tag.", }),
    0x00004485: new MatroskaId({ name: 'TagBinary                  ', level: "4 ", id: "00004485", mandatory: "-    ", multiple: "-    ", range: "-         ", default: "-                             ", type: "b", webm: "-", v1: "*", v2: "*", v3: "*", v4: "*", description: "The values of the Tag if it is binary. Note that this cannot be used in the same SimpleTag as TagString.", }),
}